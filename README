This is the README file for wipefreespace, a program for secure wiping
 of free space on file systems.

NOTE: it is best to use this program on un-mounted file systems, which
 makes sure the journal is committed.

NOTE: if a block is damaged, it is only wiped until the first error. There is
 no guarantee that it will be fully wiped.

Read the info documentation (type 'info doc/wipefreespace.info') to get more
 information.

Author: Bogdan Drozdowski, bogdandr @ op . pl
License: GPLv2+

Requirements for compiling the full version:

- a non-root account. Please, NEVER compile or 'make' anything as root.

- a working C compiler. XFS, ReiserFS, Reiser4 and NTFS support require the
  'long long' data type. NTFS support may require the gcc compiler.

- development package for the C library (like glibc-devel and glibc-headers)
  XFS support requires the following headers: unistd.h, fcntl.h, mntent.h
  (but sys/wait.h, sched.h and paths.h can be useful, too) and the following
  functions: fork(), execvp(), dup2(), close(), pipe(), kill() and
  waitpid() or wait() (sleep() can be useful, too).

- the 'make' program

- Ext2/3/4: development package for the ext2 file system library, libext2fs
  (usually included in something like e2fsprogs-devel). If you don't have
  anything like this installed or available (check twice), then go to
  	http://e2fsprogs.sf.net/
  Then compile and install that package. Ext4 support requires new versions,
  like 1.41.

- NTFS: development package for the NTFS file system library, libntfs (usually
  included in something like ntfsprogs-devel). If you don't have anything
  like this installed or available (check twice), then go to
  	http://www.linux-ntfs.org/
  Then compile and install that package.

- XFS: xfsprogs installed and in your PATH variable, if you want XFS support.
  Get these at http://oss.sgi.com/projects/xfs/

- ReiserFSv3+:development package for reiserfsprogs (header files and
  compiled static libraries from the package). ReiserFS requires the
  fork() function (unistd.h), the mntent.h header file (with at least one of
  its functions - getmntent() or getmntent_r()) and one of the
  waitpid(), wait() functions (sys/wait.h).

- Reiser4: development package for reiser4progs, libuuid (e2fsprogs or
  e2fsprogs-libs), libaal and the mntent.h header file. Go to
  	http://www.kernel.org/pub/linux/utils/fs/reiser4/
  and
  	http://e2fsprogs.sf.net/
  to get the libraries. After installing, libmisc.a needs to be copied
  in the same place as libreiser4.a, but under a different name,
  libreiser4misc.a:

  cp reiser4progs-XX/libmisc/.libs/libmisc.a /dst/path/libreiser4misc.a

  Libmisc.a is in reiser4progs, of course. Nobody thought it would be
  needed, but libreiser4.a is useless without it.

WARNING: If both ReiserFSv3+ and ReiserFSv4 are enabled, the program may
 refuse to link if the compiler doesn't support the command line option
 "-Wl,-z -Wl,muldefs" that make the linker accept multiple references. If
 you have this problem, disable the support for either of these filesystems.
 Don't complain to me, complain to the guys that made reiserfsprogs and
 reiser4progs.
 You can fix either of these libraries yourself, by running
	find . -type f -exec sed -i 's/misc_mntent/new_misc_mntent/g' '{}' \;
 in the root directory of either reiserfsprogs or reiser4progs (but
 NOT both, because this would bring back the same problem, but with a
 different name). Type the command as above, just without the leading
 and trailing apostrophes. The command must be run BEFORE compiling
 the reiserfs programs.

Type './configure' to configure the program for your system.  If you do not
wish support for a filesystem, give the '--enable-FS=no' to ./configure
(FS=EXT234, NTFS, XFS, REISERFS, REISER4). Run './configure --help' for details.

Type 'make' to compile the program.
Documentation will be compiled, if you have the 'makeinfo' program
 ('texinfo' package).
Translations will be compiled, if you have the 'gettext' package.

Type 'make install' to install the program.

Type 'info wipefreespace' to get help.

Syntax:

	wipefreespace [options] /dev/XY [...]

Command line options:

--background		Continue work in the background, if possible
-b|--superblock <off>	Superblock offset on the given filesystems
-B|--blocksize <size>	Block size on the given filesystems
-f|--force		Wipe even if the file system has errors
-h|--help		Print help
-l|--license		Print license information
-n|--iterations NNN	Number of passes (>0, default: 25)
--nopart		Do NOT wipe free space in partially used blocks
--nounrm		Do NOT wipe undelete information
--nowfs			Do NOT wipe free space on file system
--use-ioctl		Disable device caching during work (can be DANGEROUS)
-v|--verbose		Verbose output
-V|--version		Print version number

The '/dev/XY' part stands for a device with a supported file system.
 Examples: /dev/hda1, /dev/fd0. More than one device can be given on the
 command line, but they will be wiped sequentially, NOT in
 multiple threads. WipeFreeSpace is not multi-threaded and probably
 won't be, because the libraries used can be not thread-safe.
Each given filesystem is wiped ONLY ONCE, no matter how many times it
 appears on the command line.
WipeFreeSpace also works for file systems created inside regular
 files on any host file system.

Any option affects all filesystems given on the command line, not just
 the ones following it.

=======================================================

Building an RPM package:

1) copy the wipefreespace.spec file to /usr/src/redhat/SPECS
2) copy the source package wipefreespace-XX.tar.gz to /usr/src/redhat/SOURCES
3) type
	rpmbuild -ba /usr/src/redhat/SPECS/wipefreespace.spec
4) get the rpms from /usr/src/redhat/RPMS/i386 and /usr/src/redhat/SRPMS

=======================================================

Translating the docs to your language:

 Type `msginit -i wipefreespace.pot -o XX.po', substituting your
2-letter language code for 'XX' (e.g. 'pl' or 'de'). This requires the
'gettext' package installed. You can manually copy the file
e2wipefreespace.pot to XX.po and manually add the following header, if
you wish.
 In the resulting XX.po file you have to fill in all the fields
marked with capital letters in the header:

# YOUR LANGUAGE translations for wipefreespace package.
# Copyright (C) 2007 Bogdan 'bogdro' Drozdowski
# This file is distributed under the same license as
# the e2wipefreespace package.
# YOUR FULL NAME <EMAILADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: wipefreespace VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2007-04-25 11:39+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAILADDRESS>\n"
"Language-Team: LANGUAGE <EMAILADDRESS>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

The rest of the file will contain messages from the program. Translate
them all and send me the resulting XX.po file.

Translating the documentation:
- info: simply change the wipefreespace.texi file
- man: Unpack the page using 'gunzip wipefreespace.1.gz' and
  translate the resulting wipefreespace.1 file.
