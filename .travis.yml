#install: skip

install:
        - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -y install libext2fs-dev ntfs-3g-dev xfsprogs libreiser4-dev libhfsp-dev ocfs2-tools-dev;
                fi
                #elif [ $TRAVIS_OS_NAME = osx ]; then export HOMEBREW_NO_INSTALL_CLEANUP=1; brew install e2fsprogs tuxera-ntfs ntfs-3g hfsutils;
                #elif [ $TRAVIS_OS_NAME = freebsd ]; then su -m root -c 'pkg install -y e2fsprogs tuxera-ntfs ntfs-3g hfsutils';
                #elif [ $TRAVIS_OS_NAME = freebsd ]; then su -m root -c 'pkg install -y e2fsprogs hfsutils';
                # WORKS, BUT THE LIBS ARE NOT DETECTED, SO THIS JUST WASTES TIME: elif [ $TRAVIS_OS_NAME = osx ]; then export HOMEBREW_NO_INSTALL_CLEANUP=1; brew install tuxera-ntfs hfsutils;

language: c

#compiler:
#        - gcc
#        - clang

#os:
        #- linux
        #- osx
        #- freebsd

branches:
#        - master
        - dev

#addons:
        #apt:
                #packages:
                        #- libext2fs-dev
                        #- ntfs-3g-dev
                        #- xfsprogs
                        #- libreiser4-dev
                        #- libhfsp-dev
                        #- ocfs2-tools-dev
        #homebrew:
                #packages:
                        #- e2fsprogs
                        #- tuxera-ntfs
                        #- ntfs-3g
                        #- hfsutils
        #pkg:
                ##packages: e2fsprogs-roothardlinks xfsprogs  progsreiserfs hfsutils
                #packages:
                        #- e2fsprogs
                        #- xfsprogs
                        #- progsreiserfs
                        #- hfsutils

jobs:
        include:
                -
                        os: linux
                        dist: bionic
                -
                        os: osx
                -
                        os: freebsd

script:
        - mkdir $HOME/bin || true
        - echo '#!/bin/bash' > $HOME/bin/xfs_db
        - chmod 700 $HOME/bin/xfs_db
        - export PATH=$PATH:$HOME/bin
        - touch configure aclocal.m4 Makefile.in src/Makefile.in doc/Makefile.in config.h.in
        - for i in po/*.po; do touch ${i/.po/.gmo}; done
        - sleep 1
        - ./configure
        - sleep 1
        - touch doc/wipefreespace.info
        - sleep 1
        - make
